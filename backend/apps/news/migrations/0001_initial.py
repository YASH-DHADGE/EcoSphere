# Generated by Django 5.0.6 on 2025-10-18 22:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Article title', max_length=200)),
                ('summary', models.TextField(help_text='AI-generated summary (150-200 words)')),
                ('content', models.TextField(blank=True, help_text='Full article content (if available)')),
                ('source', models.CharField(help_text='News source', max_length=100)),
                ('url', models.URLField(help_text='Original article URL')),
                ('image_url', models.URLField(blank=True, help_text='Article image URL')),
                ('category', models.CharField(choices=[('POLICY', 'Policy'), ('SCIENCE', 'Science'), ('DISASTERS', 'Disasters'), ('SOLUTIONS', 'Solutions'), ('LOCAL', 'Local'), ('GLOBAL', 'Global')], help_text='Article category', max_length=20)),
                ('published_date', models.DateTimeField(help_text='Original publication date')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this is a featured article')),
                ('is_trending', models.BooleanField(default=False, help_text='Whether this article is trending')),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Number of views')),
                ('bookmark_count', models.PositiveIntegerField(default=0, help_text='Number of bookmarks')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'News Article',
                'verbose_name_plural': 'News Articles',
                'db_table': 'news_articles',
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='TrendingTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(help_text='Trending topic name', max_length=100)),
                ('search_count', models.PositiveIntegerField(default=0, help_text='Number of searches for this topic')),
                ('trend_score', models.DecimalField(decimal_places=2, default=0, help_text='Calculated trend score', max_digits=5)),
                ('date', models.DateField(help_text='Date of trending data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Trending Topic',
                'verbose_name_plural': 'Trending Topics',
                'db_table': 'trending_topics',
                'ordering': ['-trend_score', '-date'],
                'unique_together': {('topic', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ArticleBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='news.newsarticle')),
            ],
            options={
                'verbose_name': 'Article Bookmark',
                'verbose_name_plural': 'Article Bookmarks',
                'db_table': 'article_bookmarks',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'article')},
            },
        ),
    ]
